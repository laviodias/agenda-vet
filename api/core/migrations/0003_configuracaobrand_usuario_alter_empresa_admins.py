# Generated by Django 4.2.11 on 2025-07-15 18:43

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_estabelecimento', models.CharField(default='AgendaVet', help_text='Nome do estabelecimento veterinário', max_length=255)),
                ('logo', models.ImageField(blank=True, help_text='Logo do estabelecimento (formato PNG ou JPG recomendado)', null=True, upload_to='brand/logos/')),
                ('cor_primaria', models.CharField(default='#00d1b2', help_text='Cor primária em formato hexadecimal (ex: #00d1b2)', max_length=7)),
                ('cor_secundaria', models.CharField(default='#363636', help_text='Cor secundária em formato hexadecimal (ex: #363636)', max_length=7)),
                ('cor_accent', models.CharField(default='#3273dc', help_text='Cor de destaque em formato hexadecimal (ex: #3273dc)', max_length=7)),
                ('cor_background', models.CharField(default='#f5f5f5', help_text='Cor de fundo em formato hexadecimal (ex: #f5f5f5)', max_length=7)),
                ('endereco', models.TextField(blank=True, help_text='Endereço completo do estabelecimento', null=True)),
                ('telefone', models.CharField(blank=True, help_text='Telefone principal', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, help_text='E-mail de contato', max_length=254, null=True)),
                ('website', models.URLField(blank=True, help_text='Website do estabelecimento', null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Configuração de Marca',
                'verbose_name_plural': 'Configurações de Marca',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('nome', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo_usuario', models.CharField(choices=[('admin', 'Administrador'), ('veterinario', 'Veterinário'), ('cliente', 'Cliente')], default='cliente', max_length=20)),
                ('crmv', models.CharField(blank=True, max_length=20, null=True)),
                ('especialidade', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='empresa',
            name='admins',
            field=models.ManyToManyField(related_name='empresas_administradas', to='core.usuario'),
        ),
    ]
